// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// pFdorct_Rcpp
Rcpp::List pFdorct_Rcpp(const arma::vec& y, const arma::mat& X_coeffs, const Rcpp::NumericVector& X_argvals, int X_basis_df, int X_basis_degree, const Rcpp::String& basis_type, int depth, double alpha, Rcpp::String similarity_method, unsigned n_feats, int n_solve, double gamma, long int seed);
RcppExport SEXP _FdPot_pFdorct_Rcpp(SEXP ySEXP, SEXP X_coeffsSEXP, SEXP X_argvalsSEXP, SEXP X_basis_dfSEXP, SEXP X_basis_degreeSEXP, SEXP basis_typeSEXP, SEXP depthSEXP, SEXP alphaSEXP, SEXP similarity_methodSEXP, SEXP n_featsSEXP, SEXP n_solveSEXP, SEXP gammaSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_coeffs(X_coeffsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type X_argvals(X_argvalsSEXP);
    Rcpp::traits::input_parameter< int >::type X_basis_df(X_basis_dfSEXP);
    Rcpp::traits::input_parameter< int >::type X_basis_degree(X_basis_degreeSEXP);
    Rcpp::traits::input_parameter< const Rcpp::String& >::type basis_type(basis_typeSEXP);
    Rcpp::traits::input_parameter< int >::type depth(depthSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type similarity_method(similarity_methodSEXP);
    Rcpp::traits::input_parameter< unsigned >::type n_feats(n_featsSEXP);
    Rcpp::traits::input_parameter< int >::type n_solve(n_solveSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< long int >::type seed(seedSEXP);
    rcpp_result_gen = Rcpp::wrap(pFdorct_Rcpp(y, X_coeffs, X_argvals, X_basis_df, X_basis_degree, basis_type, depth, alpha, similarity_method, n_feats, n_solve, gamma, seed));
    return rcpp_result_gen;
END_RCPP
}
// predict_FdPot_Rcpp
Rcpp::List predict_FdPot_Rcpp(const Rcpp::List& fitted_tree, const arma::mat& X_coefs, const unsigned result_idx);
RcppExport SEXP _FdPot_predict_FdPot_Rcpp(SEXP fitted_treeSEXP, SEXP X_coefsSEXP, SEXP result_idxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type fitted_tree(fitted_treeSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_coefs(X_coefsSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type result_idx(result_idxSEXP);
    rcpp_result_gen = Rcpp::wrap(predict_FdPot_Rcpp(fitted_tree, X_coefs, result_idx));
    return rcpp_result_gen;
END_RCPP
}
// compute_func_datum_integral
arma::mat compute_func_datum_integral(const arma::vec& coefs, const Rcpp::NumericVector& X_argvals, const unsigned basis_df, const unsigned basis_degree, const unsigned n_times);
RcppExport SEXP _FdPot_compute_func_datum_integral(SEXP coefsSEXP, SEXP X_argvalsSEXP, SEXP basis_dfSEXP, SEXP basis_degreeSEXP, SEXP n_timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type coefs(coefsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type X_argvals(X_argvalsSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type basis_df(basis_dfSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type basis_degree(basis_degreeSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type n_times(n_timesSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_func_datum_integral(coefs, X_argvals, basis_df, basis_degree, n_times));
    return rcpp_result_gen;
END_RCPP
}
// get_bspline_internal_knots
arma::vec get_bspline_internal_knots(const arma::vec& coefs, const Rcpp::NumericVector& X_argvals, const unsigned basis_df, const unsigned basis_degree, const unsigned n_feats);
RcppExport SEXP _FdPot_get_bspline_internal_knots(SEXP coefsSEXP, SEXP X_argvalsSEXP, SEXP basis_dfSEXP, SEXP basis_degreeSEXP, SEXP n_featsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type coefs(coefsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type X_argvals(X_argvalsSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type basis_df(basis_dfSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type basis_degree(basis_degreeSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type n_feats(n_featsSEXP);
    rcpp_result_gen = Rcpp::wrap(get_bspline_internal_knots(coefs, X_argvals, basis_df, basis_degree, n_feats));
    return rcpp_result_gen;
END_RCPP
}
// test_case_compute_dissim_and_feats
void test_case_compute_dissim_and_feats(const arma::mat& X_coeffs, const Rcpp::NumericVector& X_argvals, int X_basis_df, int X_basis_degree, unsigned n_feats);
RcppExport SEXP _FdPot_test_case_compute_dissim_and_feats(SEXP X_coeffsSEXP, SEXP X_argvalsSEXP, SEXP X_basis_dfSEXP, SEXP X_basis_degreeSEXP, SEXP n_featsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_coeffs(X_coeffsSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type X_argvals(X_argvalsSEXP);
    Rcpp::traits::input_parameter< int >::type X_basis_df(X_basis_dfSEXP);
    Rcpp::traits::input_parameter< int >::type X_basis_degree(X_basis_degreeSEXP);
    Rcpp::traits::input_parameter< unsigned >::type n_feats(n_featsSEXP);
    test_case_compute_dissim_and_feats(X_coeffs, X_argvals, X_basis_df, X_basis_degree, n_feats);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FdPot_pFdorct_Rcpp", (DL_FUNC) &_FdPot_pFdorct_Rcpp, 13},
    {"_FdPot_predict_FdPot_Rcpp", (DL_FUNC) &_FdPot_predict_FdPot_Rcpp, 3},
    {"_FdPot_compute_func_datum_integral", (DL_FUNC) &_FdPot_compute_func_datum_integral, 5},
    {"_FdPot_get_bspline_internal_knots", (DL_FUNC) &_FdPot_get_bspline_internal_knots, 5},
    {"_FdPot_test_case_compute_dissim_and_feats", (DL_FUNC) &_FdPot_test_case_compute_dissim_and_feats, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_FdPot(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
